{"version":3,"sources":["components/Searchbar/Searchbar.js","utils/picturesApi.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","clearSubmit","className","this","type","autoComplete","onChange","autoFocus","placeholder","Component","searchQuery","page","axios","get","ImageGalleryItem","pictures","onOpenModal","map","id","webformatURL","largeImageURL","tags","src","alt","data-img","onClick","ImageGallery","Button","Modal","handleKeyDown","code","onClose","handleBackdropClick","event","currentTarget","window","addEventListener","removeEventListener","children","App","isLoading","showModal","largeImage","toggleModal","onChangeQuery","dataset","img","fetchArticles","options","picturesApi","then","response","prevState","data","hits","finally","prevProps","scrollTo","top","document","documentElement","scrollHeight","behavior","color","height","width","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0326827f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    clearSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      query: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({\r\n      query: '',\r\n    });\r\n    this.props.clearSubmit();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\" onSubmit={this.handleSubmit}>\r\n        <form className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import axios from 'axios';\r\n\r\nconst fetchArticles = ({ searchQuery = '', page = 1 }) => {\r\n  return axios.get(\r\n    `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=20124121-6ece0bc9b039a6c992b9911c7&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n};\r\n\r\nexport default { fetchArticles };\r\n","import React from 'react';\r\n\r\nconst ImageGalleryItem = ({ pictures, onOpenModal }) => {\r\n  return pictures.map(({ id, webformatURL, largeImageURL, tags }) => {\r\n    return (\r\n      <li key={id} className=\"ImageGalleryItem\">\r\n        <img\r\n          src={webformatURL}\r\n          alt={tags}\r\n          className=\"ImageGalleryItem-image\"\r\n          data-img={largeImageURL}\r\n          onClick={onOpenModal}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\r\n\r\nclass ImageGallery extends Component {\r\n  static propTypes = {\r\n    pictures: PropTypes.array.isRequired,\r\n    onOpenModal: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"ImageGallery\">\r\n        <ImageGalleryItem\r\n          pictures={this.props.pictures}\r\n          onOpenModal={this.props.onOpenModal}\r\n        />\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" className=\"button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  handleBackdropClick = event => {\r\n    if (event.target === event.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Loader from 'react-loader-spinner';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport picturesApi from './utils/picturesApi';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\n\nclass App extends Component {\n  state = {\n    pictures: [],\n    page: 1,\n    searchQuery: '',\n    isLoading: false,\n    showModal: false,\n    largeImage: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchArticles();\n    }\n    if (prevState.page !== this.state.page) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  onChangeQuery = query => {\n    this.setState({ searchQuery: query });\n  };\n\n  clearSubmit = () => {\n    this.setState({\n      pictures: [],\n      page: 1,\n    });\n  };\n\n  onOpenModal = e => {\n    this.setState({\n      largeImage: e.target.dataset.img,\n    });\n    this.toggleModal();\n  };\n\n  fetchArticles = () => {\n    const { page, searchQuery } = this.state;\n    const options = {\n      searchQuery,\n      page,\n    };\n\n    this.setState({ isLoading: true });\n\n    picturesApi\n      .fetchArticles(options)\n      .then(response => {\n        this.setState(prevState => ({\n          pictures: [...prevState.pictures, ...response.data.hits],\n          page: prevState.page + 1,\n        }));\n      })\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  render() {\n    const { pictures, isLoading, largeImage, showModal } = this.state;\n    return (\n      <div className=\"App\">\n        <Searchbar\n          onSubmit={this.onChangeQuery}\n          clearSubmit={this.clearSubmit}\n        />\n        {isLoading && (\n          <Loader type=\"Oval\" color=\"#00BFFF\" height={100} width={100} />\n        )}\n        <ImageGallery pictures={pictures} onOpenModal={this.onOpenModal} />\n        {pictures.length > 0 && <Button onClick={this.fetchArticles} />}\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={largeImage} alt=\"\" />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}